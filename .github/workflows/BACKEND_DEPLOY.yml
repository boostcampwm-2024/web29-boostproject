name: 백엔드 배포
on:
  push:
    branches: [main]
    paths:
      - "packages/backend/**"
      - "packages/shared/**"
jobs:
  push_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v2

      - name: NCP 컨테이너 레지스트리 로그인
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY_URL }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECERET_KEY }}

      - name: 도커 이미지 빌드 및 푸시
        id: docker-build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./packages/backend/Dockerfile
          push: true
          tags: ${{secrets.CONTAINER_REGISTRY_URL}}/nodejs-server:latest

      - name: 배포 결과 처리
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const buildOutcome = '${{ steps.docker-build.outcome }}';
            const repoName = context.repo.repo; 

            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: repoName, 
              name: '백엔드 배포 상태',
              head_sha: context.sha,
              status: 'completed',
              conclusion: buildOutcome === 'success' ? 'success' : 'failure',
              output: {
                title: buildOutcome === 'success' 
                  ? '🚀 백엔드 배포 성공' 
                  : '❌ 백엔드 배포 실패',
                summary: buildOutcome === 'success'
                  ? [
                      '## ✅ 배포 상태: 성공',
                      '',
                      '### 배포 정보:',
                      '- 📅 **배포 시간**: ' + new Date().toISOString(),
                      '- 🌏 **환경**: Production',
                      '- 📦 **이미지**: nodejs-server:latest',
                      '- 🎯 **대상**: NCP Container Registry',
                      '',
                      '🎉 프로덕션 환경에 성공적으로 배포되었습니다!'
                    ].join('\n')
                  : [
                      '## ❌ 배포 상태: 실패',
                      '',
                      '### 오류 정보:',
                      '- 📅 **실패 시간**: ' + new Date().toISOString(),
                      '- 🚨 **실패 단계**: Docker 빌드 및 푸시',
                      '',
                      '### 문제 해결 방법:',
                      '1. Dockerfile 설정을 확인해주세요',
                      '2. 빌드 로그를 확인해주세요',
                      '3. NCP 인증 정보를 확인해주세요',
                      '',
                    ].join('\n')
              }
            });
