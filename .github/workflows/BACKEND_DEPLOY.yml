name: 백엔드 배포
on:
  push:
    branches: [main]
    paths:
      - "packages/backend/**"
      - "packages/shared/**"
jobs:
  push_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v2

      - name: NCP 컨테이너 레지스트리 로그인
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY_URL }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: 도커 이미지 빌드 및 푸시
        id: docker-build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./packages/backend/Dockerfile
          push: true
          tags: ${{ secrets.CONTAINER_REGISTRY_URL }}/backend:latest

  pull_from_registry:
    runs-on: ubuntu-latest
    needs: push_to_registry
    steps:
      - name: SSH로 서버 접속
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            # NCP 컨테이너 레지스트리 로그인
            docker login -u ${{ secrets.NCP_ACCESS_KEY }} -p ${{ secrets.NCP_SECRET_KEY }} ${{ secrets.CONTAINER_REGISTRY_URL }}

            # 새로운 이미지 pull
            docker pull ${{ secrets.CONTAINER_REGISTRY_URL }}/backend:latest

            # 기존 컨테이너 중지 및 제거
            docker stop backend || true
            docker rm backend || true

            # .env 파일 생성
            echo "${{ secrets.ENV_FILE_CONTENTS }}" > .env

            # 컨테이너 업데이트
            docker pull ${{ secrets.CONTAINER_REGISTRY_URL }}/backend:latest
            docker run -d --name backend --network host --add-host db-host:${{secrets.DB_HOST}} --restart unless-stopped --env-file .env ${{ secrets.CONTAINER_REGISTRY_URL }}/backend:latest
