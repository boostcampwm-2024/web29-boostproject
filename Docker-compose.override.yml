version: "3.8"

services:
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - app-network
    command: redis-server --bind 0.0.0.0 # 외부 연결 허용

  mysql:
    image: mysql:8.0
    container_name: mysql-container
    ports:
      - "3306:3306"
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: dev_db
      MYSQL_USER: honey
      MYSQL_PASSWORD: 1234
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test:
        ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p1234"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: --bind-address=0.0.0.0

  backend:
    build:
      context: .
      dockerfile: ./packages/backend/Dockerfile
    container_name: backend
    ports:
      - "3000:3000"
      - "9001:9001"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      NODE_ENV: development
      MYSQL_HOST: mysql-container
      MYSQL_PORT: 3306
      MYSQL_USERNAME: honey
      MYSQL_PASSWORD: 1234
      MYSQL_DATABASE: dev_db
      REDIS_HOST: redis-container
      REDIS_PORT: 6379
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: ./packages/frontend/Dockerfile
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_started
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
